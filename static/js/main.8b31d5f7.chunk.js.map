{"version":3,"sources":["components/Entry.js","components/Register.js","Account.js","Admin.js","App.js","reportWebVitals.js","index.js"],"names":["Entry","props","useState","userName","setuserName","password","setpassword","history","useHistory","checkAccount","theCurrentAccount","count","accounts","length","alert","push","i","getCurrentAccount","currentAccount","style","fontSize","className","onChange","element","target","value","placeholder","marginBottom","type","onClick","to","Register","accountId","accountMoney","accountName","id","setid","confirmPassword","setconfirmPassword","money","setmoney","handleRoute","location","pathname","validNewAccount","setNewAccount","editAccount","changeEditedAccount","disabled","marginLeft","textField","Account","showAction","setshowAction","price","setprice","product","setproduct","marginRight","setBillsToAccount","hidden","Admin","showAccounts","showBillsTable","position","marginTop","App","setaccounts","setcurrentAccount","showBills","setshowBills","accountPlace","setaccountPlace","tempBills","accountPlacing","index","showIndexAccountBills","map","bills","e","removeFilter","filter","removeProduct","deleteAccounts","tempAccounts","path","width","margin","Number","tempAccount","account","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b31d5f7.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Password from \"@material-ui/icons/Security\"\r\nimport Person from \"@material-ui/icons/PersonOutline\"\r\n\r\n\r\n\r\nexport default function Entry(props) {\r\n\r\n    const [userName, setuserName] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const history = useHistory();\r\n\r\n\r\n    function handleClick() { //take us to the account page with his name on the page's path \r\n        history.push(`/ ${props.currentAccount.userName}`);\r\n    }\r\n\r\n    function showAdminPage() { //take us to the admin page if the name and password written as they should\r\n        history.push('/admin');\r\n    }\r\n\r\n\r\n    const checkAccount = () => {\r\n        let count = 0;\r\n        let theCurrentAccount;\r\n        if (props.accounts.length == 0) alert('There is no accounts yet,plaese create the first one') // check if there are any accounts in data\r\n        if (userName == 'admin' && password == 'admin') {\r\n            showAdminPage()\r\n        }\r\n        else {\r\n            for (let i = 0; i < props.accounts.length; i++) {\r\n                if (props.accounts[i].userName == userName && props.accounts[i].password == password) { // cross the user name and passwords to get into the right account\r\n                    theCurrentAccount = props.accounts[i];\r\n                    props.getCurrentAccount(theCurrentAccount); // pass the data of the current account to the App.js\r\n                    handleClick() //take us to the account page\r\n                }\r\n                if (props.accounts[i].userName != userName || props.accounts[i].password != password) {\r\n                    count++\r\n                    //when the loop is finished and no account was found than the count variable equal to the number of accounts and it alert that something is wrong\r\n                    if (count == props.accounts.length) {\r\n                        alert('password or user name is wrong')\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ fontSize: '30px' }}>\r\n            <h1>AM - BANK</h1>\r\n            <div className=\"form-container\">\r\n                <div className=\"form-input\">\r\n                    <Person fontSize=\"large\" className=\"icon responsiveIcon\" />\r\n                    <input className=\"responsive\" onChange={(element) => { setuserName(element.target.value) }} placeholder=\"User Name\" /> <br /><br />\r\n                </div>\r\n                <div className=\"form-input\">\r\n                    <Password fontSize=\"large\" className=\"icon responsiveIcon\" />\r\n                    <input className=\"responsive\" onChange={(element) => { setpassword(element.target.value) }} style={{ marginBottom: '2%' }} placeholder=\"Password\" type=\"password\" /> <br />\r\n                </div>\r\n            </div>\r\n\r\n            {/* press twice on the ENTER button to get in */}\r\n            <button className='logIn curtaindown' onClick={() => { checkAccount() }} >\r\n                LOGIN\r\n            </button>\r\n            <br />\r\n            <Link to='/register'>\r\n                <button className='createAccount'>\r\n                    Create new account\r\n                </button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport Person from \"@material-ui/icons/PersonOutline\"\r\nimport Id from \"@material-ui/icons/CardMembership\"\r\nimport Password from \"@material-ui/icons/Security\"\r\nimport Money from \"@material-ui/icons/EuroSymbol\"\r\n\r\n\r\n\r\nexport default function Register(props) {\r\n\r\n    const [id, setid] = useState('');\r\n    const [userName, setuserName] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [confirmPassword, setconfirmPassword] = useState('');\r\n    const [money, setmoney] = useState('');\r\n    let accountId;\r\n    let accountMoney;\r\n    let accountName;\r\n    const history = useHistory();\r\n\r\n\r\n    const handleRoute = () => {\r\n        if (history.location.pathname == '/register') history.push(\"/\"); //take us back to entry page after we signed up\r\n        else history.push(`/ ${props.currentAccount.userName}`) // take us back to our account page after we edited details\r\n    }\r\n\r\n    // that function gives us the option to present two different pages,one to register an the other for edit\r\n    const ModifyPlaceHolder = () => {\r\n        if (history.location.pathname == '/edit') {\r\n            return (\r\n                <div style={{ fontSize: '30px' }}>\r\n                    <h1>EDIT</h1>\r\n                    <div className=\"form-container\">\r\n                        <div className=\"form-input\">\r\n                            <Id fontSize=\"large\" className=\"icon responsiveIcon\" />\r\n                            <input className=\"register-input responsive\" disabled=\"disabled\" type='number' style={{ marginBottom: '1.5%' }} placeholder={props.currentAccount.id} /> <br />\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <Person fontSize=\"large\" className=\"icon responsiveIcon\" />\r\n                            <input className=\"register-input responsive\" onChange={(element) => { setuserName(element.target.value) }} style={{ marginBottom: '1.5%' }} placeholder={props.currentAccount.userName} /> <br />\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <Password fontSize=\"large\" className=\"icon responsiveIcon\" />\r\n                            <input className=\"register-input responsive\" onChange={(element) => { setpassword(element.target.value) }} style={{ marginBottom: '1.5%' }} placeholder={props.currentAccount.password} /> <br />\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <Password fontSize=\"large\" className=\"icon responsiveIcon\" />\r\n                            <input className=\"register-input responsive\" onChange={(element) => { setconfirmPassword(element.target.value) }} style={{ marginBottom: '1.5%' }} placeholder={props.currentAccount.password} /> <br />\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <Money fontSize=\"large\" className=\"icon responsiveIcon\" />\r\n                            <input className=\"register-input responsive\" onChange={(element) => { setmoney(element.target.value) }} type='number' style={{ marginBottom: '1.5%' }} placeholder={props.currentAccount.money} /> <br /><br />\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"logIn\" onClick={() => { editAccount(); setid(props.currentAccount.id) }}>Edit</button>\r\n                    <Link to={`/ ${props.currentAccount.userName}`}>\r\n                        <button className=\"logIn\" style={{ marginLeft: \"5%\" }}>Back</button>\r\n                    </Link>\r\n\r\n                </div>\r\n            )\r\n\r\n        }\r\n        else {\r\n            return (\r\n                <div style={{ fontSize: '30px' }}>\r\n                    <h1>REGISTER</h1>\r\n                    {/* <div className=\"form-outer\"> */}\r\n                    <div className=\"form-container\">\r\n                        {/* <form className=\"form\"> */}\r\n                        <div className=\"form-input\">\r\n                            <Id fontSize=\"large\" className=\"icon responsiveIcon\" />\r\n                            <input className=\"register-input responsive\" onChange={(element) => { setid(element.target.value) }} type='number' style={{ marginBottom: '1.5%' }} placeholder=\"ID\" textField /> <br />\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <Person fontSize=\"large\" className=\"icon responsiveIcon\" />\r\n                            <input className=\"register-input responsive\" onChange={(element) => { setuserName(element.target.value) }} style={{ marginBottom: '1.5%' }} placeholder=\"User Name\" /> <br />\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <Password fontSize=\"large\" className=\"icon responsiveIcon\" />\r\n                            <input className=\"register-input responsive\" onChange={(element) => { setpassword(element.target.value) }} style={{ marginBottom: '1.5%' }} placeholder=\"Password\" /> <br />\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <Password fontSize=\"large\" className=\"icon responsiveIcon\" />\r\n                            <input className=\"register-input responsive\" onChange={(element) => { setconfirmPassword(element.target.value) }} style={{ marginBottom: '1.5%' }} placeholder=\"Confirm Password\" /> <br />\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <Money fontSize=\"large\" className=\"icon responsiveIcon\" />\r\n                            <input className=\"register-input responsive\" onChange={(element) => { setmoney(element.target.value) }} type='number' style={{ marginBottom: '1.5%' }} placeholder=\"Money\" /> <br /><br />\r\n                        </div>\r\n                        {/* </form> */}\r\n                    </div>\r\n                    {/* </div> */}\r\n                    <button className=\"logIn\" onClick={() => { validNewAccount() }} >Create</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    const validNewAccount = () => {\r\n        if (id.length != 9) { alert('id have to be exactly 9 digits') }\r\n        if (userName.length < 4) { alert('user name have to be at least 4 letters') }\r\n        if (password.length < 6) { alert('password have to be at least 6 letters') }\r\n        if (password != confirmPassword) { alert('sorry, your password has not confirmed well') }\r\n        if (money > 1000000 || money < 0) { alert('plaese write a valid money amount between 0 to 1000000') }\r\n        if (money <= 1000000 && money >= 0 && password == confirmPassword && password.length >= 6 && userName.length >= 4 && id.length == 9 && history.location.pathname == '/register') {\r\n            props.setNewAccount(id, userName, password, money); //if everything is good it creates a new account that will be saved in app.js\r\n            handleRoute() //take us back to entry so we could log in \r\n        }\r\n    }\r\n\r\n    const editAccount = () => {\r\n        if (history.location.pathname == '/edit') {\r\n            accountId = props.currentAccount.id;\r\n            if (userName.length == 0) accountName = props.currentAccount.userName; //keeps the dataif the user dont write nothing and the onChange input change it to null\r\n            if (password.length == 0 || confirmPassword.length == 0) {\r\n                alert(\"Write your password to proceed changes\")\r\n                if (password != confirmPassword) alert(\"The passwords not match, try agin\")\r\n            }\r\n            if (password.length < 6 && password.length != 0) alert('password have to be at least 6 letters')\r\n            if (userName.length < 4 && userName.length != 0) alert('user name have to be at least 4 letters')\r\n            if (userName.length > 0) accountName = userName;\r\n            if (money > 1000000 || money < 0) { alert('plaese write a valid money amount between 0 to 1000000') }\r\n            if (money.length == 0) accountMoney = props.currentAccount.money\r\n            if (money.length > 0) accountMoney = money\r\n        }\r\n        if (password.length >= 6 && password == confirmPassword) { //allow to edit only if the passwords match and by the rules\r\n            props.changeEditedAccount(accountId, accountName, password, accountMoney);\r\n            handleRoute()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {ModifyPlaceHolder()}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Product from \"@material-ui/icons/LocalGroceryStore\"\r\nimport Price from \"@material-ui/icons/Payment\"\r\n\r\n\r\n\r\nexport default function Account(props) {\r\n\r\n    const [showAction, setshowAction] = useState(false);\r\n    const [price, setprice] = useState('');\r\n    const [product, setproduct] = useState('');\r\n\r\n\r\n    const showBalance = () => {\r\n        alert(props.currentAccount.money)\r\n    }\r\n\r\n    const checkAction = () =>{\r\n        if(price<=0 || product == '') alert(\"Please fill the requested details\")\r\n        else{\r\n            props.setBillsToAccount(product, price); \r\n            setshowAction(!showAction)\r\n        }\r\n    }\r\n\r\n    const hidden = () => {\r\n        if (showAction == true) {\r\n            return (\r\n                <div>\r\n                    <div className=\"form-container\">\r\n                        <div className=\"form-input\">\r\n                            <Product fontSize=\"medium\" className=\"icon responsiveIcon\" />\r\n                            <input className=\"register-input responsive\" placeholder=\"product\" type=\"text\" style={{ marginBottom: '10px' }} onChange={(element) => { setproduct(element.target.value) }} /> <br />\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <Price fontSize=\"medium\" className=\"icon responsiveIcon\" />\r\n                            <input className=\"register-input responsive\" placeholder=\"price\" type=\"number\" style={{ marginBottom: '10px' }} onChange={(element) => { setprice(element.target.value) }} /> <br />\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"logIn\" onClick={() => { checkAction() }}> Buy !</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ fontSize: '30px' }}>\r\n            <h1>Hey {props.currentAccount.userName + ' !'}</h1>\r\n            <button className=\"logIn\" onClick={() => { showBalance() }} style={{ marginRight: '2%' }}>BALANCE</button>\r\n            <button className=\"logIn\" onClick={() => { setshowAction(!showAction); setprice(''); setproduct(''); }} >ACTION</button> <br /> <br />\r\n            <Link to='/edit'>\r\n                <button className=\"account-button size-change\" style={{ marginRight: '2%' }}>EDIT</button>\r\n            </Link>\r\n            <Link to='/'>\r\n                <button className=\"account-button size-change\">EXIT</button>\r\n            </Link> <br /> <br />\r\n            {hidden()}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Admin(props) {\r\n\r\n    const [accountIndex, setaccountIndex] = useState('');\r\n    const [productIndex, setproductIndex] = useState('');\r\n    // let showBills = false;\r\n    let tempBills = [];\r\n    let tempAccounts = [];\r\n\r\n    // const removeProduct = (index)=>{\r\n    //     for(let i=0; i<props.accounts.length;i++){\r\n    //         if(i==index){\r\n    //             props.accounts[i].bills=[...tempBills]\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // const removeFilter =(index)=>{ debugger;\r\n    //     props.accounts[accountIndex].bills.filter((element,i)=>{\r\n    //         if(i!=index){\r\n    //             tempBills.push({product:element.product,price:element.price});\r\n    //             removeProduct(accountIndex);\r\n    //         }\r\n    //         if(props.accounts[accountIndex].bills.length==1&&i==index&&props.accounts[accountIndex].bills[0]==element){\r\n    //             tempBills=[]\r\n    //             removeProduct(accountIndex)\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n\r\n    // const billsTableOne = () => { \r\n    //     return (\r\n    //         accounts.map((element, i) => {\r\n    //             if(i==accountIndex){\r\n    //             return (\r\n    //                 element.bills.map((e, index) => {\r\n    //                     return (\r\n    //                         <tr>\r\n    //                             <td>{e.product}</td>\r\n    //                             <td>{e.price}</td>\r\n    //                             <td><button className=\"adminOrangeButton\" onClick={()=>{setproductIndex(index);removeFilter(index)}}>x</button></td>\r\n    //                         </tr>\r\n    //                     )\r\n    //                 })\r\n    //             )                        \r\n    //             }\r\n    //         })\r\n    //     )\r\n    // }\r\n\r\n    // const showbillsTable = () => {\r\n    //     if (showBills == false) return null\r\n    //     if (showBills == true) {\r\n    //         return (\r\n    //             <div>\r\n    //             <table style={{ width: '85%', margin: 'auto' }}>\r\n    //                 <tr>\r\n    //                     <th>Product</th>\r\n    //                     <th>Price</th>\r\n    //                     <th>Delete</th>\r\n    //                 </tr>\r\n    //                 {billsTableOne()}\r\n    //             </table>\r\n    //             <button className=\"deleteButton\" onClick={()=>{props.deleteAccounts(tempAccounts,accountIndex); setshowBills(false)}}>\r\n    //             Delete account\r\n    //             </button>\r\n    //             </div>\r\n    //         )\r\n    //     }\r\n    // }\r\n\r\n\r\n    // const showAccounts = (showBills) => {\r\n    //     if (props.accounts.length > 0) {\r\n    //         return (\r\n    //             accounts.map((element, index) => {\r\n    //                 return (\r\n    //                     <div className=\"accountDetailsStyle\">\r\n    //                         {element.userName}<br /> <br />\r\n    //                         {element.id} <br /> <br />\r\n    //                         <button className=\"adminOrangeButton\"\r\n    //                             onClick={() => {\r\n    //                                 showBills=!showBills;\r\n    //                                 accountPlacing(index)\r\n    //                             }}>Charges</button>\r\n    //                     </div>\r\n    //                 )\r\n    //             }))\r\n    //     }\r\n    // }\r\n\r\n\r\n    return (\r\n        <div style={{ fontSize: '30px' }}>\r\n            <h1 className=\"margin-for-space\">MANAGER</h1>\r\n            {props.showAccounts()}\r\n            <div>\r\n                {props.showBillsTable()}\r\n            </div>\r\n            <Link to='/'>\r\n                <button className=\"exitAdmin\" style={{ position: \"relative\", marginTop: '3%' }}>Exit</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport React, { useState, useRef, useEffect } from 'react';\nimport Entry from './components/Entry'\nimport Register from './components/Register';\nimport Account from './Account';\nimport Admin from './Admin';\n\n\nfunction App() {\n\n  const [accounts, setaccounts] = useState('');\n  const [currentAccount, setcurrentAccount] = useState('');\n  const [editedAccount, seteditedAccount] = useState(currentAccount);\n  let productIndex;\n  const [showBills, setshowBills] = useState(false);\n  const [accountPlace, setaccountPlace] = useState();\n  let tempBills=[];\n\n  const setNewAccount = (id, userName, password, money) => {\n    setaccounts([...accounts, { id: id, userName: userName, password: password, money: money, bills: [] }])\n  }\n\n  const getCurrentAccount = (account) => {\n    setcurrentAccount(account)\n  }\n\n  const changeEditedAccount = (id, userName, password, money) => {\n    const tempAccount = [];\n    for (let i = 0; i < accounts.length; i++) {\n      if (accounts[i] == currentAccount) {\n        tempAccount.push({ id: id, userName: userName, password: password, money: money, bills: [...accounts[i].bills] })\n        setcurrentAccount(tempAccount[0]);\n        accounts[i] = tempAccount[0];\n        setaccounts([...accounts])\n      }\n    }\n  }\n\n\n  const setBillsToAccount = (product, price) => {\n    for (let i = 0; i < accounts.length; i++) {\n      if (accounts[i].password == currentAccount.password && accounts[i].userName == currentAccount.userName) {\n        accounts[i].bills = [...accounts[i].bills, { product: product, price: price }]\n        accounts[i].money = Number((accounts[i].money) - Number(price))\n      }\n    }\n  }\n\n\n  const accountPlacing = (index) => {\n    setaccountPlace(index)\n  }\n  \n  const showBillsTable = () => {\n    if (showBills == false) return null\n    if (showBills == true) {\n      return (\n        <div>\n          <table style={{ width: '85%', margin: 'auto' }}>\n            <tr>\n              <th>Product</th>\n              <th>Price</th>\n              <th>Delete</th>\n            </tr>\n            {showIndexAccountBills()}\n          </table>\n          <button className=\"deleteButton\" onClick={() => { deleteAccounts(); setshowBills(false) }}>\n            Delete account\n          </button>\n        </div>\n      )\n    }\n  }\n\n  const showIndexAccountBills = () => {\n    return (\n      accounts.map((element, i) => {\n        if (i == accountPlace) {\n          return (\n            element.bills.map((e, index) => {\n              return (\n                <tr>\n                  <td>{e.product}</td>\n                  <td>{e.price}</td>\n                  <td><button className=\"adminOrangeButton\" \n                  onClick={() => { \n                     removeFilter(index) \n                     }\n                     }>x</button></td>\n                </tr>\n              )\n            })\n          )\n        }\n      })\n      )\n  }\n  const removeFilter = (index) => {\n    debugger;\n    tempBills = [];\n    accounts[accountPlace].bills.filter((element, i) => {\n      if (i != index) {\n        tempBills.push({ product: element.product, price: element.price });\n        removeProduct(accountPlace)\n      }\n      if (accounts[accountPlace].bills.length < 2 && i == index && accounts[accountPlace].bills[0] == element) {\n        tempBills = []\n        removeProduct(accountPlace)\n      }\n    });\n  }\n  \n  const removeProduct = (index) => {\n    for (let i = 0; i < accounts.length; i++) {\n      if (i == index) {\n        accounts[i].bills = [...tempBills]\n      }\n    }\n  }\n\n  const deleteAccounts = () => {\n    debugger;\n    let tempAccounts = [];\n    for (let i = 0; i < accounts.length; i++) {\n      if (i != accountPlace) {\n        tempAccounts.push(accounts[i]);\n        setaccounts([...tempAccounts]);\n      }\n      if (accounts.length == 1 && accounts[i] == accounts[0] && i == accountPlace) {\n        setaccounts('')\n      }\n    }\n  }\n\n  const showAccounts = () => {\n    if (accounts.length > 0) {\n      return (\n        accounts.map((element, index) => {\n          return (\n            <div className=\"accountDetailsStyle\">\n              {element.userName}<br /> <br />\n              {element.id} <br /> <br />\n              <button className=\"adminOrangeButton\"\n                onClick={() => {\n                  setshowBills(!showBills);\n                  accountPlacing(index)\n                }}>Charges</button>\n            </div>\n          )\n        }))\n    }\n  }\n\n\n\n  return (\n    <div className=\"App scrolling\" > {/* this class gives us the option to scroll down the page when needed */}\n      <Router>\n        <Switch>\n          <Route path='/admin'>\n            {/* the admin page is for watching accounts activities and manage them */}\n            <Admin accounts={accounts} showAccounts={showAccounts} showBillsTable={showBillsTable} deleteAccounts={deleteAccounts} removeFilter={removeFilter} accountPlacing={accountPlacing} showIndexAccountBills={showIndexAccountBills} />\n          </Route>\n          <Route path={`/ ${currentAccount.userName}`} >\n            {/* the account page is for watching the balance and purchase some things and even gives you option to change account details */}\n            <Account setBillsToAccount={setBillsToAccount} currentAccount={currentAccount} />\n          </Route>\n          <Route path={['/register', '/edit']}>\n            {/* in the register component we got two options... one is to register new accounts and the other one is to change details for the accounts,\n              thats why it got two paths */}\n            <Register setNewAccount={setNewAccount} currentAccount={currentAccount} changeEditedAccount={changeEditedAccount} />\n          </Route>\n          <Route path='/'>\n            {/* the entry page gives you the option to log into your account or into the admin account */}\n            <Entry currentAccount={currentAccount} accounts={accounts} getCurrentAccount={getCurrentAccount} />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './App.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}