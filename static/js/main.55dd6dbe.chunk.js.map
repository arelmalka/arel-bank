{"version":3,"sources":["components/Entry.js","components/Register.js","Account.js","Admin.js","App.js","reportWebVitals.js","index.js"],"names":["Entry","props","useState","userName","setuserName","password","setpassword","history","useHistory","checkAccount","theCurrentAccount","count","accounts","length","alert","push","i","getCurrentAccount","currentAccount","style","fontSize","className","onChange","element","target","value","placeholder","marginBottom","type","onClick","to","Register","accountId","accountMoney","accountName","id","setid","confirmPassword","setconfirmPassword","money","setmoney","handleRoute","location","pathname","validNewAccount","setNewAccount","editAccount","changeEditedAccount","disabled","marginLeft","textField","Account","showAction","setshowAction","price","setprice","product","setproduct","marginRight","setBillsToAccount","hidden","Admin","accountIndex","setaccountIndex","setproductIndex","showBills","setshowBills","tempBills","tempAccounts","removeProduct","index","bills","billsTableOne","map","e","filter","removeFilter","showAccounts","width","margin","deleteAccounts","position","marginTop","App","setaccounts","setcurrentAccount","path","tempAccount","Number","account","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55dd6dbe.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Password from \"@material-ui/icons/Security\"\r\nimport Person from \"@material-ui/icons/PersonOutline\"\r\n\r\n\r\n\r\nexport default function Entry(props) {\r\n\r\n    const [userName, setuserName] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const history = useHistory();\r\n\r\n\r\n    function handleClick() { //take us to the account page with his name on the page's path \r\n        history.push(`/ ${props.currentAccount.userName}`);\r\n    }\r\n\r\n    function showAdminPage() { //take us to the admin page if the name and password written as they should\r\n        history.push('/admin');\r\n    }\r\n\r\n\r\n    const checkAccount = () => { \r\n        let count = 0;\r\n        let theCurrentAccount;\r\n        if (props.accounts.length == 0) alert('There is no accounts yet,plaese create the first one') // check if there are any accounts in data\r\n        if (userName == 'admin' && password == 'admin') {\r\n            showAdminPage()\r\n        }\r\n        else {\r\n            for (let i = 0; i < props.accounts.length; i++) {\r\n                if (props.accounts[i].userName == userName && props.accounts[i].password == password) { // cross the user name and passwords to get into the right account\r\n                    theCurrentAccount = props.accounts[i];\r\n                    props.getCurrentAccount(theCurrentAccount); // pass the data of the current account to the App.js\r\n                    handleClick() //take us to the account page\r\n                }\r\n                if (props.accounts[i].userName != userName || props.accounts[i].password != password) {\r\n                    count++\r\n                    //when the loop is finished and no account was found than the count variable equal to the number of accounts and it alert that something is wrong\r\n                    if (count == props.accounts.length) { \r\n                        alert('password or user name is wrong')\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ fontSize: '30px' }}>\r\n            <h1>AM - BANK</h1>\r\n            <div className=\"form-container\">\r\n                <div className=\"form-input\">\r\n                    <Person fontSize=\"large\" className=\"icon\" />\r\n                    <input onChange={(element) => { setuserName(element.target.value) }} placeholder=\"User Name\" /> <br /><br />\r\n                </div>\r\n                <div className=\"form-input\">\r\n                    <Password fontSize=\"large\" className=\"icon\" />\r\n                    <input onChange={(element) => { setpassword(element.target.value) }} style={{ marginBottom: '2%' }} placeholder=\"Password\" type=\"password\" /> <br />\r\n                </div>\r\n            </div>\r\n\r\n            {/* press twice on the ENTER button to get in */}\r\n            <button className='logIn curtaindown' onClick={() => { checkAccount() }} >\r\n                LOGIN\r\n            </button>\r\n            <br />\r\n            <Link to='/register'>\r\n                <button className='createAccount'>\r\n                    Create new account\r\n                </button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useHistory,Link} from \"react-router-dom\";\r\nimport Person from \"@material-ui/icons/PersonOutline\"\r\nimport Id from \"@material-ui/icons/CardMembership\"\r\nimport Password from \"@material-ui/icons/Security\"\r\nimport Money from \"@material-ui/icons/EuroSymbol\"\r\n\r\n\r\n\r\nexport default function Register(props) {\r\n\r\n    const [id, setid] = useState('');\r\n    const [userName, setuserName] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [confirmPassword, setconfirmPassword] = useState('');\r\n    const [money, setmoney] = useState('');\r\n    let accountId;\r\n    let accountMoney;\r\n    let accountName;\r\n    const history = useHistory();\r\n\r\n\r\n    const handleRoute = () => {\r\n        if(history.location.pathname == '/register') history.push(\"/\"); //take us back to entry page after we signed up\r\n        else history.push(`/ ${props.currentAccount.userName}`) // take us back to our account page after we edited details\r\n    }\r\n\r\n    // that function gives us the option to present two different pages,one to register an the other for edit\r\n        const ModifyPlaceHolder = () => {                \r\n        if (history.location.pathname == '/edit') {\r\n            return (                                              \r\n                <div style={{ fontSize: '30px' }}>\r\n                    <h1>EDIT</h1>\r\n                    <div className=\"form-container\">\r\n                        <div className=\"form-input\">\r\n                            <Id fontSize=\"large\" className=\"icon\" />\r\n                            <input className=\"register-input\" disabled=\"disabled\" type='number' style={{ marginBottom: '1.5%' }} placeholder={props.currentAccount.id}  /> <br />\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <Person fontSize=\"large\" className=\"icon\" />\r\n                            <input className=\"register-input\" onChange={(element) => { setuserName(element.target.value) }} style={{ marginBottom: '1.5%' }} placeholder={props.currentAccount.userName} /> <br />\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <Password fontSize=\"large\" className=\"icon\" />\r\n                            <input className=\"register-input\" onChange={(element) => { setpassword(element.target.value) }} style={{ marginBottom: '1.5%' }} placeholder={props.currentAccount.password} /> <br />\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <Password fontSize=\"large\" className=\"icon\" />\r\n                            <input className=\"register-input\" onChange={(element) => { setconfirmPassword(element.target.value) }} style={{ marginBottom: '1.5%' }} placeholder={props.currentAccount.password} /> <br />\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <Money fontSize=\"large\" className=\"icon\" />\r\n                            <input className=\"register-input\" onChange={(element) => { setmoney(element.target.value) }} type='number' style={{ marginBottom: '1.5%' }} placeholder={props.currentAccount.money} /> <br /><br />\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"logIn\" onClick={() => { editAccount(); setid(props.currentAccount.id)  }}>Edit</button>\r\n                    <Link to={`/ ${props.currentAccount.userName}`}>\r\n                    <button className=\"logIn\" style={{marginLeft:\"5%\"}}>Back</button>\r\n                    </Link>\r\n                    \r\n                </div>\r\n            )\r\n\r\n        }\r\n        else {\r\n            return (\r\n                <div style={{ fontSize: '30px' }}>\r\n                    <h1>REGISTER</h1>\r\n                    {/* <div className=\"form-outer\"> */}\r\n                    <div className=\"form-container\">\r\n                        {/* <form className=\"form\"> */}\r\n                        <div className=\"form-input\">\r\n                            <Id fontSize=\"large\" className=\"icon\" />\r\n                            <input className=\"register-input\" onChange={(element) => { setid(element.target.value) }} type='number' style={{ marginBottom: '1.5%' }} placeholder=\"ID\" textField /> <br />\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <Person fontSize=\"large\" className=\"icon\" />\r\n                            <input className=\"register-input\" onChange={(element) => { setuserName(element.target.value) }} style={{ marginBottom: '1.5%' }} placeholder=\"User Name\" /> <br />\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <Password fontSize=\"large\" className=\"icon\" />\r\n                            <input className=\"register-input\" onChange={(element) => { setpassword(element.target.value) }} style={{ marginBottom: '1.5%' }} placeholder=\"Password\" /> <br />\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <Password fontSize=\"large\" className=\"icon\" />\r\n                            <input className=\"register-input\" onChange={(element) => { setconfirmPassword(element.target.value) }} style={{ marginBottom: '1.5%' }} placeholder=\"Confirm Password\" /> <br />\r\n                        </div>\r\n                        <div className=\"form-input\">\r\n                            <Money fontSize=\"large\" className=\"icon\" />\r\n                            <input className=\"register-input\" onChange={(element) => { setmoney(element.target.value) }} type='number' style={{ marginBottom: '1.5%' }} placeholder=\"Money\" /> <br /><br />\r\n                        </div>\r\n                        {/* </form> */}\r\n                    </div>\r\n                    {/* </div> */}\r\n                    <button className=\"logIn\" onClick={() => { validNewAccount() }} >Create</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    const validNewAccount = () => {\r\n        if (id.length != 9) { alert('id have to be exactly 9 digits') }\r\n        if (userName.length < 4) { alert('user name have to be at least 4 letters') }\r\n        if (password.length < 6) { alert('password have to be at least 6 letters') }\r\n        if (password != confirmPassword) { alert('sorry, your password has not confirmed well') }\r\n        if (money > 1000000 || money < 0) { alert('plaese write a valid money amount between 0 to 1000000') }\r\n        if (money <= 1000000 && money >= 0 && password == confirmPassword && password.length >= 6 && userName.length >= 4 && id.length == 9 && history.location.pathname == '/register') {\r\n            props.setNewAccount(id, userName, password, money); //if everything is good it creates a new account that will be saved in app.js\r\n            handleRoute() //take us back to entry so we could log in \r\n        }\r\n    }\r\n\r\n    const editAccount = () => {  \r\n        if (history.location.pathname == '/edit') {\r\n            accountId=props.currentAccount.id; \r\n            if(userName.length==0)accountName=props.currentAccount.userName; //keeps the dataif the user dont write nothing and the onChange input change it to null\r\n            if(password.length==0||confirmPassword.length==0){ \r\n                alert(\"Write your password to proceed changes\")\r\n                if(password!=confirmPassword) alert(\"The passwords not match, try agin\")\r\n            }\r\n            if (password.length < 6 && password.length!=0) alert('password have to be at least 6 letters')\r\n            if (userName.length < 4 && userName.length!=0) alert('user name have to be at least 4 letters')\r\n            if (userName.length > 0) accountName = userName;  \r\n            if (money > 1000000 || money < 0) { alert('plaese write a valid money amount between 0 to 1000000') }\r\n            if(money.length==0) accountMoney=props.currentAccount.money\r\n            if(money.length>0)accountMoney=money \r\n        }\r\n        if(password.length>=6 && password==confirmPassword){ //allow to edit only if the passwords match and by the rules\r\n            props.changeEditedAccount(accountId, accountName, password, accountMoney);\r\n            handleRoute()\r\n    }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {ModifyPlaceHolder()}\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Product from \"@material-ui/icons/LocalGroceryStore\"\r\nimport Price from \"@material-ui/icons/Payment\"\r\n\r\n\r\n\r\nexport default function Account(props) {\r\n\r\n    const [showAction, setshowAction] = useState(false);\r\n    const [price, setprice] = useState('');\r\n    const [product, setproduct] = useState('');\r\n\r\n\r\n    const showBalance=()=>{\r\n        alert(props.currentAccount.money)\r\n    }\r\n\r\n    const hidden=()=>{\r\n        if(showAction==true){\r\n            return(\r\n                <div>\r\n                <div className=\"form-container\">\r\n                    <div className=\"form-input\">\r\n                    <Product fontSize=\"medium\" className=\"icon\" />\r\n                    <input className=\"register-input\" placeholder=\"product\" type=\"text\" style={{marginBottom:'10px'}} onChange={(element)=>{setproduct(element.target.value)}}/> <br/>\r\n                    </div>\r\n                    <div className=\"form-input\">\r\n                    <Price fontSize=\"medium\" className=\"icon\" />\r\n                    <input className=\"register-input\" placeholder=\"price\" type=\"number\" style={{marginBottom:'10px'}} onChange={(element)=>{setprice(element.target.value)}}/> <br/>\r\n                    </div>\r\n                </div>\r\n                    <button className=\"logIn\" onClick={()=>{props.setBillsToAccount(product,price); setshowAction(!showAction)}}> Buy !</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div style={{fontSize:'30px'}}>\r\n            <h1>Hey {props.currentAccount.userName+' !'}</h1>            \r\n            <button className=\"logIn\" onClick={()=>{showBalance()}} style={{marginRight:'2%'}}>BALANCE</button>\r\n            <button className=\"logIn\" onClick={()=>{setshowAction(!showAction)}} >ACTION</button> <br/> <br/>\r\n            <Link to='/edit'>\r\n            <button className=\"account-button size-change\" style={{marginRight:'2%'}}>EDIT</button>\r\n            </Link>\r\n            <Link to='/'>\r\n            <button className=\"account-button size-change\">EXIT</button>\r\n            </Link> <br/> <br/>\r\n            {hidden()}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Admin(props) {\r\n\r\n    const [accountIndex, setaccountIndex] = useState('');\r\n    const [productIndex, setproductIndex] = useState('');\r\n    const [showBills, setshowBills] = useState(false);\r\n    let tempBills=[];\r\n    let tempAccounts=[];\r\n\r\n    const removeProduct = (index)=>{\r\n        for(let i=0; i<props.accounts.length;i++){\r\n            if(i==index){\r\n                props.accounts[i].bills=[...tempBills]\r\n            }\r\n        }\r\n    }\r\n\r\n    const removeFilter =(index)=>{ debugger;\r\n        props.accounts[accountIndex].bills.filter((element,i)=>{\r\n            if(i!=index){\r\n                tempBills.push({product:element.product,price:element.price});\r\n                removeProduct(accountIndex);\r\n            }\r\n            if(props.accounts[accountIndex].bills.length==1&&i==index&&props.accounts[accountIndex].bills[0]==element){\r\n                tempBills=[]\r\n                removeProduct(accountIndex)\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    const billsTableOne = () => { \r\n        return (\r\n            props.accounts.map((element, i) => {\r\n                if(i==accountIndex){\r\n                return (\r\n                    element.bills.map((e, index) => {\r\n                        return (\r\n                            <tr>\r\n                                <td>{e.product}</td>\r\n                                <td>{e.price}</td>\r\n                                <td><button className=\"adminOrangeButton\" onClick={()=>{setproductIndex(index);removeFilter(index)}}>x</button></td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                )                        \r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    const showbillsTable = () => {\r\n        if (showBills == false) return null\r\n        if (showBills == true) {\r\n            return (\r\n                <div>\r\n                <table style={{ width: '85%', margin: 'auto' }}>\r\n                    <tr>\r\n                        <th>Product</th>\r\n                        <th>Price</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                    {billsTableOne()}\r\n                </table>\r\n                <button className=\"deleteButton\" onClick={()=>{props.deleteAccounts(tempAccounts,accountIndex); setshowBills(false)}}>\r\n                Delete account\r\n                </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const showAccounts = () => {\r\n        if (props.accounts.length > 0) {\r\n            return (\r\n                props.accounts.map((element, index) => {\r\n                    return (\r\n                        <div className=\"accountDetailsStyle\">\r\n                            {element.userName}<br/> <br/>\r\n                            {element.id} <br/> <br/>\r\n                            <button className=\"adminOrangeButton\" onClick={() => { setshowBills(!showBills);setaccountIndex(index) }}>Charges</button>\r\n                        </div>\r\n                    )\r\n                }))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ fontSize: '30px' }}>\r\n            <h1 className=\"margin-for-space\">MANAGER</h1>\r\n            {showAccounts()}\r\n            <div>\r\n            {showbillsTable()}\r\n            </div>\r\n            <Link to='/'>\r\n                <button className=\"exitAdmin\" style={{position:\"relative\",marginTop:'3%'}}>Exit</button>\r\n            </Link>        \r\n            </div>\r\n    )\r\n}\r\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport React, { useState,useRef,useEffect} from 'react';\nimport Entry from './components/Entry'\nimport Register from './components/Register';\nimport Account from './Account';\nimport Admin from './Admin';\n\n\nfunction App() {\n\n  const [accounts, setaccounts] = useState('');\n  const [currentAccount, setcurrentAccount] = useState('');\n  const [editedAccount, seteditedAccount] = useState(currentAccount);\n\n  const setNewAccount = (id, userName, password, money) => {\n    setaccounts([...accounts, { id: id, userName: userName, password: password, money: money, bills: [] }])\n  }\n\n  const getCurrentAccount = (account) => {\n    setcurrentAccount(account)\n  }\n\n  const changeEditedAccount = (id, userName, password, money) => {\n    const tempAccount = [];\n    for (let i = 0; i < accounts.length; i++) {\n      if (accounts[i] == currentAccount) {\n        tempAccount.push({ id: id, userName: userName, password: password, money: money, bills: [...accounts[i].bills] })\n        setcurrentAccount(tempAccount[0]);\n        accounts[i] = tempAccount[0];\n        setaccounts([...accounts])\n      }\n    }\n  }\n\n\n  const setBillsToAccount = (product, price) => {\n    for (let i = 0; i < accounts.length; i++) {\n      if (accounts[i].password == currentAccount.password && accounts[i].userName == currentAccount.userName) {\n        accounts[i].bills = [...accounts[i].bills, { product: product, price: price }]\n        accounts[i].money = Number((accounts[i].money) - Number(price))\n      }\n    }\n  }\n\n  const deleteAccounts = (tempAccount, index) => { //\n    for (let i = 0; i < accounts.length; i++) {\n      if (i != index) {\n        tempAccount.push(accounts[i]);\n        setaccounts([...tempAccount]);\n      }\n      if (accounts.length == 1 && accounts[i] == accounts[0] && i == index) {\n        setaccounts('')\n      }\n    }\n  }\n  \n\n\n\n  return (\n    <div className=\"App scrolling\" > {/* this class gives us the option to scroll down the page when needed */}\n        <Router>\n          <Switch>\n            <Route path='/admin'>\n              {/* the admin page is for watching accounts activities and manage them */}\n              <Admin accounts={accounts} deleteAccounts={deleteAccounts} /> \n            </Route>\n            <Route path={`/ ${currentAccount.userName}`} >\n              {/* the account page is for watching the balance and purchase some things and even gives you option to change account details */}\n              <Account setBillsToAccount={setBillsToAccount} currentAccount={currentAccount} />\n            </Route>\n            <Route path={['/register', '/edit']}>\n              {/* in the register component we got two options... one is to register new accounts and the other one is to change details for the accounts,\n              thats why it got two paths */}\n              <Register setNewAccount={setNewAccount} currentAccount={currentAccount} changeEditedAccount={changeEditedAccount} />\n            </Route>\n            <Route path='/'>\n              {/* the entry page gives you the option to log into your account or into the admin account */}\n              <Entry currentAccount={currentAccount} accounts={accounts} getCurrentAccount={getCurrentAccount} />\n            </Route>\n          </Switch>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './App.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}